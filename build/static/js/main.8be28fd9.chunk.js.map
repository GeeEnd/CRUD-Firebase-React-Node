{"version":3,"sources":["logo.svg","components/ContactForm.js","firebase.js","components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","initialFieldValues","fName","lName","mName","address","email","mobile","useState","values","setValues","useEffect","currentId","contactObjects","handleInputChange","e","target","name","value","autoComplete","onSubmit","preventDefault","addOrEdit","className","class","id","type","placeholder","fullName","onChange","required","n","fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","Contacts","setContactObjects","setCurrentId","child","on","snapshot","val","setSearchTerm","src","alt","align","obj","push","err","console","log","set","event","Object","keys","map","onClick","key","window","confirm","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8be28fd9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react';\r\n\r\nconst ContactForm = (props) => {\r\n\r\n\r\n    const initialFieldValues = {\r\n        fName: '',\r\n        lName: '',\r\n        mName: '',\r\n        address: '',\r\n        email: '',\r\n        mobile: ''\r\n    }\r\n\r\n    var [values, setValues] = useState(initialFieldValues)\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.currentId == '')\r\n            setValues({\r\n                ...initialFieldValues\r\n            })\r\n        else\r\n            setValues({\r\n                ...props.contactObjects[props.currentId]\r\n            })\r\n    }, [props.currentId, props.contactObjects])\r\n\r\n\r\n    const handleInputChange = e => {\r\n\r\n        var {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        props.addOrEdit(values)\r\n    }\r\n\r\n    return (\r\n        \r\n        <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\r\n                \r\n                <div className=\"form-group input-group col-md-4\">\r\n                <div class=\"input-group mb-3\">\r\n                    <span class=\"input-group-text\" id=\"basic-addon1\"><i className=\"fa fa-user\"/></span>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First Name\" name=\"fName\"\r\n                    value={values.fullName} \r\n                    onChange={handleInputChange} required\r\n                    />\r\n                    \r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last Name\" name=\"lName\"\r\n                    value={values.fullName} \r\n                    onChange={handleInputChange} required\r\n                    />\r\n                    \r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Middle Name\" name=\"mName\"\r\n                    value={values.fullName} \r\n                    onChange={handleInputChange} required\r\n                    />\r\n                </div>\r\n                </div>\r\n\r\n                <div class=\"input-group mb-3\">\r\n                    <span class=\"input-group-text\"><i className=\"fa fa-envelope\"/></span>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Email\" aria-label=\"Email\" name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleInputChange} required\r\n                    />\r\n                    <span class=\"input-group-text\"><i className=\"fa fa-mobile-alt\"/></span>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Mobile No.\" aria-label=\"Server\" name=\"mobile\"\r\n                    value={values.mobile}\r\n                    onChange={handleInputChange} required\r\n                    />\r\n           \r\n                </div>\r\n\r\n                <div class=\"form-group mb-3\">\r\n                    <div class=\"input-group-prepend\" >  \r\n                    <textarea className=\"input-group-text\" class=\"form-control\" aria-label=\"With textareaa\" name=\"address\" placeholder=\"Address\"\r\n                    value={values.address} \r\n                    onChange={handleInputChange} required/>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group mb-3\">\r\n                         <input type=\"submit\" value=\"Save Data\" className=\"btn btn-outline-primary btn-block-block\"n/>\r\n                        \r\n                </div>\r\n              \r\n\r\n     </form>\r\n    \r\n    );\r\n}\r\n\r\nexport default ContactForm;","// Import the functions you need from the SDKs you need\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/firestore'\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA6sSNZQEHk_HH4_Zx2_Mu0dOWKyXb0Ttg\",\r\n  authDomain: \"fir-crud-85628.firebaseapp.com\",\r\n  databaseURL: \"https://fir-crud-85628-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"fir-crud-85628\",\r\n  storageBucket: \"fir-crud-85628.appspot.com\",\r\n  messagingSenderId: \"146626234827\",\r\n  appId: \"1:146626234827:web:57281c45d7b5b4de0e0e4e\"\r\n};\r\n\r\nconst fireDb = firebase.initializeApp(firebaseConfig);\r\nexport default fireDb.database().ref();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport fireDb from \"../firebase\";\r\n\r\n\r\nconst Contacts = () => {\r\n    var [contactObjects, setContactObjects] = useState({});\r\n    var [currentId, setCurrentId] = useState('');\r\n\r\n    useEffect(() => {\r\n        fireDb.child('contacts').on('value', snapshot => {\r\n            if (snapshot.val() != null)\r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                })\r\n            else\r\n                setContactObjects({})\r\n\r\n        })\r\n    }, [])// similar to componentDidMount\r\n\r\n    const [searchTerm, setSearchTerm]=useState('')\r\n\r\n    const addOrEdit = obj => {\r\n        if (currentId == '')\r\n            fireDb.child('contacts').push(\r\n                obj,\r\n                err => {\r\n                    if (err)\r\n                        console.log(err)\r\n                    else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n        else\r\n            fireDb.child(`contacts/${currentId}`).set(\r\n                obj,\r\n                err => {\r\n                    if (err)\r\n                        console.log(err)\r\n                    else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n    }\r\n\r\n    const onDelete = key => {\r\n        if (window.confirm('Are you sure to delete this record?')) {\r\n            debugger\r\n            fireDb.child(`contacts/${key}`).remove(\r\n                err => {\r\n                    if (err)\r\n                        console.log(err)\r\n                    else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        \r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                \r\n                    <h1 className=\"display-4 text-center\">Employee Registration</h1>\r\n                    <img src=\"non.png\" class=\"rounded mx-auto d-block\" alt=\"Me\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"jumbotron jumbotron-fluid\" align=\"center text-center\"  >\r\n                   <span align=\"center\" > <ContactForm {...({ addOrEdit, currentId, contactObjects })} /></span>\r\n                </div>\r\n                <div class=\"input-group col-md\">\r\n               <span><input type=\"text\" class=\"form-control\" placeholder=\"Search\" aria-label=\"\" aria-describedby=\"basic-addon1\"\r\n               onChange={(event) => {setSearchTerm(event.target.value);}}\r\n               />\r\n               </span> </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md\">\r\n                    <table className=\"table table-stripped\">\r\n                        <thead className=\"thead-light\" class=\"table-dark\">\r\n                            <tr>\r\n                                <th>First Name</th>\r\n                                <th>Last Name</th>\r\n                                <th>Middle Name</th>\r\n                                <th>Mobile</th>\r\n                                <th>Email</th>\r\n                                <th>Address</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                Object.keys(contactObjects).map(id => {\r\n                                    return <tr key={id}>\r\n                                        <td>{contactObjects[id].fName}</td>\r\n                                        <td>{contactObjects[id].lName}</td>\r\n                                        <td>{contactObjects[id].mName}</td>\r\n                                        <td>{contactObjects[id].mobile}</td>\r\n                                        <td>{contactObjects[id].email}</td>\r\n                                        <td>{contactObjects[id].address}</td>\r\n                                        <td>\r\n                                            <a className=\"btn text-primary\" onClick={() => { setCurrentId(id) }}>\r\n                                                <i className=\"fas fa-pencil-alt\"></i>\r\n                                            </a>\r\n                                            <a className=\"btn text-danger\" onClick={() => { onDelete(id) }}>\r\n                                                <i className=\"far fa-trash-alt\"></i>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n      \r\n    );\r\n}\r\n\r\nexport default Contacts;","import logo from './logo.svg';\nimport './App.css';\nimport Contacts from './components/Contacts';\n\nfunction App() {\n\n  \n  return (\n    <div className =\"row\">\n      <div className=\"col-md-8 offset-md-2\">\n        <Contacts/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}